@using GitHubRepoTrackerFE_Blazor.Interfaces
@using GitHubRepoTrackerFE_Blazor.Models
@using System.Linq
@page "/"
@inject IRepoService reposervice
@inject ILanguageService languageservice
@inject ITopicService topicservice


<PageTitle>Home</PageTitle>
<Header />

@if (RepositoryListModel.repositories is not null && RepositoryListModel.topics is not null && RepositoryListModel.languages is not null)
{
    <div class="filters text-right">
        <label>Filter by Language:</label>
        <select @onchange="FilterByLanguage">
                <option value="Select" selected disabled="disabled">Choose Language</option>
                @foreach (var language in RepositoryListModel.languages)
                {
                   
                    <option value="@language.languageName">@language.languageName</option>
                }
            </select>
   
        <label>Filter by Topics:</label>

        <select @onchange="FilterByTopic">
                <option value="Select" selected disabled="disabled">Choose Topic</option>

            @foreach (var topic in RepositoryListModel.topics)
                {
                    <option value="@topic.topicName">@topic.topicName</option>
                }
        </select>
    </div>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Index</th>
                <th>RepoName</th>
                <th>Description</th>
                <th>Language</th>
                <th>Topics</th>
                <th>Last updated</th>
                <th>Stars</th>
                <th>Forks</th>
            </tr>
        </thead>
        <tbody>
            @{
                int index = 1;
                foreach (var repo in RepositoryListModel.repositories)
                {
                    <tr>
                        <td>@index</td>
                        <td>@repo.repositoryName</td>
                        <td>@repo.description</td>
                        <td>@repo.language.languageName</td>

                        <td>
                            <ul>

                                @foreach (var topic in repo.repositoryTopics)
                                {
                                    <li>@topic.topicName</li>
                                }
                            </ul>
                            
                        </td>
                        <td>@repo.updatedAt</td>
                        <td>@repo.forksCount</td>
                        <td>@repo.stargazersCount</td>
                    </tr>
                    index++;
                }
            }
        </tbody>
        

    </table>
}
    
else
{
        <p>Loading data...</p>
}

    


@code
{
    RepositoryListModel RepositoryListModel = new RepositoryListModel();
    string selectedLanguage = "";
    string selectedTopic = "";

}

@functions {
    protected override async Task OnInitializedAsync()
    {
        RepositoryListModel.repositories = await reposervice.GetAllRepos();
        RepositoryListModel.languages = await languageservice.GetAllLanguages();
        RepositoryListModel.topics = await topicservice.GetAllTopics();

    
    }

    

    void FilterByLanguage(ChangeEventArgs e)
    {
        selectedLanguage = e.Value.ToString();
        FilterData();
    }

    void FilterByTopic(ChangeEventArgs e)
    {
        selectedTopic = e.Value.ToString();
        FilterData();
    }

    void FilterData()
    {
        RepositoryListModel.repositories = RepositoryListModel.repositories.Where(r =>
            (string.IsNullOrEmpty(selectedLanguage) || r.language.languageName == selectedLanguage) &&
            (string.IsNullOrEmpty(selectedTopic) || r.repositoryTopics.Any(t => t.topicName == selectedTopic))
        ).ToList();
        StateHasChanged();
    }

}


